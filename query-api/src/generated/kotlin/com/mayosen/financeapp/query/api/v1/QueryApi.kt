/**
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech) (7.13.0).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */
package com.mayosen.financeapp.query.api.v1

import io.swagger.v3.oas.annotations.Operation
import io.swagger.v3.oas.annotations.media.Content
import io.swagger.v3.oas.annotations.media.Schema
import io.swagger.v3.oas.annotations.responses.ApiResponse
import org.springframework.http.ResponseEntity
import org.springframework.validation.annotation.Validated
import org.springframework.web.bind.annotation.RequestMapping
import org.springframework.web.bind.annotation.RequestMethod
import org.springframework.web.bind.annotation.RequestParam
import org.springframework.web.bind.annotation.RestController

@RestController
@Validated
interface QueryApi {
    @Operation(
        tags = ["query"],
        summary = "Get account summary",
        operationId = "getAccountSummary",
        description = """""",
        responses = [
            ApiResponse(
                responseCode = "200",
                description = "Account summary retrieved successfully",
                content = [Content(schema = Schema(implementation = GetAccountSummaryResponse::class))],
            ),
        ],
    )
    @RequestMapping(
        method = [RequestMethod.GET],
        value = ["/query-api/v1/accounts/summary"],
        produces = ["application/json"],
    )
    fun getAccountSummary(
        @RequestParam(
            value = "accountId",
            required = true,
        ) accountId: String,
    ): ResponseEntity<GetAccountSummaryResponse>

    @Operation(
        tags = ["query"],
        summary = "Get transaction history",
        operationId = "getTransactions",
        description = """""",
        responses = [
            ApiResponse(
                responseCode = "200",
                description = "Transaction history retrieved successfully",
                content = [Content(schema = Schema(implementation = GetTransactionHistoryResponse::class))],
            ),
        ],
    )
    @RequestMapping(
        method = [RequestMethod.GET],
        value = ["/query-api/v1/transactions"],
        produces = ["application/json"],
    )
    fun getTransactions(
        @RequestParam(value = "accountId", required = true) accountId: String,
        @RequestParam(
            value = "timeFrom",
            required = false,
        ) @org.springframework.format.annotation.DateTimeFormat(
            iso = org.springframework.format.annotation.DateTimeFormat.ISO.DATE_TIME,
        ) timeFrom: java.time.Instant?,
        @RequestParam(
            value = "timeTo",
            required = false,
        ) @org.springframework.format.annotation.DateTimeFormat(
            iso = org.springframework.format.annotation.DateTimeFormat.ISO.DATE_TIME,
        ) timeTo: java.time.Instant?,
        @RequestParam(
            value = "pageOffset",
            required = false,
            defaultValue = "0",
        ) pageOffset: Int,
        @RequestParam(value = "pageLimit", required = false, defaultValue = "20") pageLimit: Int,
    ): ResponseEntity<GetTransactionHistoryResponse>

    @Operation(
        tags = ["query"],
        summary = "List accounts by owner",
        operationId = "listAccounts",
        description = """""",
        responses = [
            ApiResponse(
                responseCode = "200",
                description = "Accounts list retrieved successfully",
                content = [Content(schema = Schema(implementation = ListAccountsResponse::class))],
            ),
        ],
    )
    @RequestMapping(
        method = [RequestMethod.GET],
        value = ["/query-api/v1/accounts"],
        produces = ["application/json"],
    )
    fun listAccounts(
        @RequestParam(
            value = "ownerId",
            required = true,
        ) ownerId: String,
    ): ResponseEntity<ListAccountsResponse>
}
